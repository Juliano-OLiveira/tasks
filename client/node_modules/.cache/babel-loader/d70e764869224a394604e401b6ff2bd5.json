{"ast":null,"code":"var _jsxFileName = \"/root/Documents/testapp/client/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/header';\nimport CRUDs from './components/corpo/crud.js';\nimport Footer from './components/footer/footer.js';\nimport './components/footer/index.css';\nimport './App.css';\nimport '../node_modules/flexboxgrid/css/flexboxgrid.min.css';\nimport Modal from 'react-modal';\nimport Axios from 'axios';\nimport Configs from './config';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.delete = index => {\n      let task = this.state.tasks;\n      task.splice(index, 1);\n      this.setState({\n        task: task\n      });\n    };\n\n    this.editar = (tarefa, event) => {\n      event.preventDefault();\n      this.setState({\n        taskAtrr: tarefa\n      });\n      this.setState({\n        modalIsOpen: true\n      }); // console.log(\"Editando\");\n    };\n\n    this.state = {\n      status: 'false',\n      taskAtrr: '',\n      concluir: 'Resolvido',\n      modalIsOpen: false,\n      tasks: []\n    };\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.createCruds = this.createCruds.bind(this);\n  }\n\n  componentDidMount() {\n    // fetch('http://localhost:3000/tasks')\n    // .then(res => res.json())\n    // .then(result => {\n    //   this.setState({tasks: result})\n    // })\n    // ,error => console.log(error)\n    Axios.get(Configs.urlToServer).then(response => {\n      this.setState({\n        tasks: response.data\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  saveTask(event) {\n    event.preventDefault();\n    let position = event.target.position.value;\n\n    if (position !== '-1') {\n      this.updateTask(position, event);\n    } else {\n      this.createCruds(event);\n    }\n  }\n\n  updateTask(position, event) {\n    event.preventDefault();\n    this.setState({\n      taskAtrr: ''\n    });\n    let tasks = [...this.state.tasks];\n    tasks[position] = this.newCruds(event);\n    alert('Tarefa atualizada com sucesso');\n    this.setState({\n      tasks: tasks\n    });\n    this.closeModal();\n  }\n\n  newCruds(event) {\n    let crud = {\n      title: event.target.title.value,\n      categoria: event.target.categoria.value,\n      textarea: event.target.textarea.value,\n      descricao: event.target.descricao.value,\n      status: true\n    };\n    return crud;\n  }\n\n  createCruds(event) {\n    event.preventDefault();\n    this.setState({\n      taskAtrr: ''\n    });\n    let cruds = [...this.state.tasks];\n    let tarefa = this.newCruds(event);\n    Axios.post(Configs.urlToServer, {\n      tarefa\n    }).then(response => {\n      console.log(response);\n      this.setState({\n        tarefa: cruds\n      });\n      console.log({\n        tarefa: cruds\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n    this.closeModal();\n  }\n\n  concluir(index) {\n    let task = this.state.tasks;\n    task.splice(index, 1);\n    this.setState({\n      task: task\n    });\n    alert('Tarefa Resolvida');\n    console.log('Concluindo');\n  }\n\n  openModal() {\n    this.setState({\n      modalIsOpen: true\n    });\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"Gerencidor de Apps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"contador\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \" Tarefas \\xA0\", this.state.tasks.length), React.createElement(\"div\", {\n      className: \"CRUDs row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, this.state.tasks.map((tarefa, index) => {\n      return React.createElement(CRUDs, {\n        key: index,\n        value: tarefa,\n        className: \"col-xs-12 col-sm-8 col-md-6 col-lg-4\",\n        delete: this.delete.bind(this, index),\n        editar: this.editar.bind(this, tarefa),\n        concluir: this.concluir.bind(this, tarefa),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      });\n    })), React.createElement(Footer, {\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      ariaHideApp: false,\n      isOpen: this.state.modalIsOpen,\n      onAfterOpen: this.afterOpenModtabelasal,\n      onRequestClose: this.closeModal,\n      className: \"Modal\",\n      contentLabel: \"Example Modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.closeModal,\n      className: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, \" x \"), React.createElement(\"h2\", {\n      ref: subtitle => this.subtitle = subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233\n      },\n      __self: this\n    }, \"Adicionar Tarefas\")), React.createElement(\"form\", {\n      onSubmit: this.saveTask.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, \"Titulo\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"ti\",\n      name: \"title\",\n      ref: \"title\",\n      defaultValue: this.state.taskAtrr.title,\n      placeholder: \"Titulo..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"categoria\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, \"Categoria\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"lname\",\n      name: \"categoria\",\n      defaultValue: this.state.taskAtrr.categoria,\n      placeholder: \"Categoria..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"descricao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"Descri\\xE7\\xE3o\"), React.createElement(\"textarea\", {\n      name: \"textarea\",\n      rows: \"10\",\n      cols: \"94\",\n      id: \"descricao\",\n      defaultValue: this.state.taskAtrr.descricao,\n      className: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"hidden\",\n      name: \"position\",\n      defaultValue: this.state.tasks.indexOf(this.state.taskAtrr),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Enviar\",\n      name: \"bt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/root/Documents/testapp/client/src/App.js"],"names":["React","Component","Header","CRUDs","Footer","Modal","Axios","Configs","App","constructor","props","delete","index","task","state","tasks","splice","setState","editar","tarefa","event","preventDefault","taskAtrr","modalIsOpen","status","concluir","openModal","bind","afterOpenModal","closeModal","createCruds","componentDidMount","get","urlToServer","then","response","data","catch","error","console","log","saveTask","position","target","value","updateTask","newCruds","alert","crud","title","categoria","textarea","descricao","cruds","post","subtitle","style","color","render","length","map","afterOpenModtabelasal","indexOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Header from './components/header';\n\nimport CRUDs from './components/corpo/crud.js';\nimport Footer from './components/footer/footer.js';\nimport './components/footer/index.css';\n\nimport './App.css';\nimport '../node_modules/flexboxgrid/css/flexboxgrid.min.css';\nimport Modal from 'react-modal';\nimport Axios from 'axios';\nimport Configs from './config';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n\n    this.state = {\n      status: 'false',\n      taskAtrr: '', \n      concluir:'Resolvido',  \n      modalIsOpen: false,  \n      tasks: [  ]\n    }\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.createCruds = this.createCruds.bind(this);\n\n\n\n  }\n\n  componentDidMount(){\n    // fetch('http://localhost:3000/tasks')\n    // .then(res => res.json())\n    // .then(result => {\n    //   this.setState({tasks: result})\n    // })\n    // ,error => console.log(error)\n    Axios.get(Configs.urlToServer)\n    .then(response =>{\n      this.setState({tasks: response.data})\n    })\n    .catch(error =>{\n      console.log(error);\n    })\n  }\n\n\n\n\n  saveTask(event) {\n    event.preventDefault();\n    let position = event.target.position.value;\n    if (position !== '-1') {\n      this.updateTask(position, event)\n    } else {\n\n      this.createCruds(event);\n    }\n\n\n\n  }\n\n  updateTask(position, event) {\n\n    event.preventDefault();\n    this.setState({ taskAtrr: '' });\n    let tasks = [...this.state.tasks];\n    tasks[position] = this.newCruds(event);\n\n    alert('Tarefa atualizada com sucesso');\n    this.setState({ tasks: tasks });\n    this.closeModal();\n\n\n  }\n\n  newCruds(event) {\n    let crud = {\n      title: event.target.title.value,\n      categoria: event.target.categoria.value,\n      textarea: event.target.textarea.value,\n      descricao: event.target.descricao.value,\n\n      status: true\n    }\n    return crud;\n  }\n\n  createCruds(event) {\n    event.preventDefault();\n    this.setState({ taskAtrr: '' });\n\n   \n\n    let cruds = [...this.state.tasks];\n    let tarefa = this.newCruds(event);\n   \n      Axios.post(Configs.urlToServer,{tarefa})\n      .then(response =>{\n        console.log(response);\n        \n        this.setState({tarefa: cruds });\n       \n       console.log({tarefa:cruds});\n       \n      })\n      .catch(error =>{\n        console.log(error);\n      })\n     \n\n    \n    \n\n    this.closeModal();\n\n  }\n\n\n  delete = (index) => {\n\n    let task = this.state.tasks;\n    task.splice(index, 1);\n    this.setState({\n      task: task\n    })\n  }\n\n  editar = (tarefa, event) => {\n    event.preventDefault();\n    this.setState({taskAtrr:tarefa});\n   this.setState({ modalIsOpen: true });\n   \n\n    // console.log(\"Editando\");\n  }\n\n  concluir(index) {\n    \n    let task = this.state.tasks;\n    task.splice(index, 1);\n   this.setState({task:task})\n    alert('Tarefa Resolvida');\n\n    console.log('Concluindo');\n   \n  }\n\n\n\n\n  openModal() {\n\n    this.setState({ modalIsOpen: true });\n\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n\n\n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n\n\n\n  render() {\n\n    return (\n\n      <div className=\"App\">\n\n        < Header title=\"Gerencidor de Apps\" />\n        <span className=\"contador\"> Tarefas &nbsp;\n              {this.state.tasks.length}\n            </span>\n\n\n\n\n\n        <div className=\"CRUDs row\"  >\n          {this.state.tasks.map((tarefa, index) => {\n\n            return < CRUDs\n              key={index}\n              value={tarefa}\n              className=\"col-xs-12 col-sm-8 col-md-6 col-lg-4\"\n              delete={this.delete.bind(this, index)}\n              editar={this.editar.bind(this, tarefa)}\n              concluir={this.concluir.bind(this,tarefa)}\n\n\n            />\n\n\n\n\n          })}\n\n        </div>\n\n        <Footer onClick={this.openModal} ></Footer>\n\n\n        <Modal\n          ariaHideApp={false}\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModtabelasal}\n          onRequestClose={this.closeModal}\n          className=\"Modal\"\n\n\n          contentLabel=\"Example Modal\"\n\n\n        >\n          <div>\n            <button onClick={this.closeModal} className=\"close\" > x </button>\n\n            <h2 ref={subtitle => this.subtitle = subtitle}>Adicionar Tarefas</h2>\n          </div>\n\n          <form onSubmit={this.saveTask.bind(this)}  >\n            <div>\n\n\n              <label htmlFor=\"title\">Titulo</label>\n              <input type=\"text\" id=\"ti\" name=\"title\" ref=\"title\" defaultValue={this.state.taskAtrr.title} placeholder=\"Titulo..\" />\n            </div>\n            <div>\n              <label htmlFor=\"categoria\">Categoria</label>\n              <input type=\"text\" id=\"lname\" name=\"categoria\" defaultValue={this.state.taskAtrr.categoria} placeholder=\"Categoria..\" />\n            </div>\n            <div>\n              <label htmlFor=\"descricao\">Descrição</label>\n              <textarea name=\"textarea\" rows=\"10\" cols=\"94\" id=\"descricao\" defaultValue={this.state.taskAtrr.descricao} className=\"textarea\" ></textarea>\n\n              <input type=\"hidden\" name=\"position\" defaultValue={this.state.tasks.indexOf(this.state.taskAtrr)} />\n\n              <input type=\"submit\" value=\"Enviar\" name=\"bt\" />\n            </div>\n          </form>\n\n\n\n        </Modal>\n\n\n\n\n\n      </div>\n\n    );\n\n\n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}