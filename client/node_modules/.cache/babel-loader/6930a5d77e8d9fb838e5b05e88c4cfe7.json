{"ast":null,"code":"var _jsxFileName = \"/root/Documents/testapp/src/App.js\";\nimport React, { Component } from 'react';\nimport Header from './components/header';\nimport CRUDs from './components/corpo/crud.js';\nimport Footer from './components/footer/footer.js';\nimport './components/footer/index.css';\nimport './App.css';\nimport '../node_modules/flexboxgrid/css/flexboxgrid.min.css';\nimport Modal from 'react-modal';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.delete = i => {\n      let task = this.state.tasks;\n      task.splice(i, 1);\n      this.setState({\n        task: task\n      });\n    };\n\n    this.editar = (i, event) => {\n      event.preventDefault();\n      let task = this.state.tasks[i];\n      this.refs.title.value = task.title;\n      this.openModal();\n      this.setState({\n        task: task.title.value\n      });\n      console.log(task);\n      console.log(i);\n      console.log(\"Editando\");\n    };\n\n    this.state = {\n      title: \"\",\n      categoria: \"\",\n      textarea: \"\",\n      act: 0,\n      modalIsOpen: false,\n      tasks: [//<CRUDs />,\n      ]\n    };\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.createCruds = this.createCruds.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      title: event.target.title\n    });\n  }\n\n  newCruds(event) {\n    let crud = {\n      title: event.target.title.value,\n      categoria: event.target.categoria.value,\n      textarea: event.target.textarea.value,\n      descricao: event.target.descricao.value,\n      status: true\n    };\n    return crud;\n  }\n\n  createCruds(event) {\n    const cruds = [...this.state.tasks];\n\n    if (cruds.unshift(this.newCruds(event)) !== -1) {\n      this.setState({\n        tasks: cruds\n      });\n    }\n\n    this.closeModal();\n    event.preventDefault();\n  }\n\n  salvar(event) {\n    event.preventDefault();\n    console.log('Salvando');\n  }\n\n  openModal() {\n    this.setState({\n      modalIsOpen: true\n    });\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n  }\n\n  closeModal() {\n    this.setState({\n      modalIsOpen: false\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Header, {\n      title: \"Gerencidor de Apps\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.createCruds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, \"Titulo\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"fname\",\n      ref: \"title\",\n      value: this.props.title,\n      name: \"title\",\n      placeholder: \"Titulo..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"categoria\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Categoria\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"lname\",\n      ref: \"categoria\",\n      name: \"categoria\",\n      placeholder: \"Categoria..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"descricao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Descri\\xE7\\xE3o\"), React.createElement(\"textarea\", {\n      name: \"textarea\",\n      ref: \"textarea\",\n      rows: \"10\",\n      cols: \"94\",\n      id: \"descricao\",\n      className: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Enviar\",\n      name: \"bt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, this.state.tasks.map((tarefa, i) => {\n      return React.createElement(\"div\", {\n        className: \"col-xs-12 col-sm-8 col-md-6 col-lg-4\",\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(CRUDs, {\n        delete: this.delete.bind(this, i),\n        editar: this.editar.bind(this, i),\n        salvar: this.salvar.bind(this),\n        valor: tarefa,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }));\n    })), React.createElement(Footer, {\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }), React.createElement(Modal, {\n      ariaHideApp: false,\n      isOpen: this.state.modalIsOpen,\n      onAfterOpen: this.afterOpenModtabelasal,\n      onRequestClose: this.closeModal,\n      className: \"Modal\",\n      contentLabel: \"Example Modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.closeModal,\n      className: \"close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, \" x \"), React.createElement(\"h2\", {\n      ref: subtitle => this.subtitle = subtitle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Tarefas\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.createCruds,\n      ref: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"ti\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Titulo\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"ti\",\n      ref: \"title\",\n      name: \"title\",\n      value: this.state.value,\n      onChange: this.newCruds,\n      placeholder: \"Titulo..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"categoria\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, \"Categoria\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"lname\",\n      ref: \"categoria\",\n      name: \"categoria\",\n      placeholder: \"Categoria..\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"descricao\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Descri\\xE7\\xE3o\"), React.createElement(\"textarea\", {\n      name: \"textarea\",\n      ref: \"textarea\",\n      rows: \"10\",\n      cols: \"94\",\n      id: \"descricao\",\n      className: \"textarea\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"Enviar\",\n      name: \"bt\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/root/Documents/testapp/src/App.js"],"names":["React","Component","Header","CRUDs","Footer","Modal","App","constructor","props","delete","i","task","state","tasks","splice","setState","editar","event","preventDefault","refs","title","value","openModal","console","log","categoria","textarea","act","modalIsOpen","bind","afterOpenModal","closeModal","createCruds","handleChange","target","newCruds","crud","descricao","status","cruds","unshift","salvar","subtitle","style","color","render","map","tarefa","afterOpenModtabelasal"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AAEA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,OAAO,+BAAP;AAEA,OAAO,WAAP;AACA,OAAO,qDAAP;AACA,OAAOC,KAAP,MAAkB,aAAlB;;AAIA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAC1BM,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAyDnBC,MAzDmB,GAyDTC,CAAD,IAAO;AAEd,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWC,KAAtB;AACAF,MAAAA,IAAI,CAACG,MAAL,CAAYJ,CAAZ,EAAe,CAAf;AACA,WAAKK,QAAL,CAAc;AACZJ,QAAAA,IAAI,EAAEA;AADM,OAAd;AAGD,KAhEkB;;AAAA,SAkEnBK,MAlEmB,GAkEV,CAACN,CAAD,EAAGO,KAAH,KAAa;AACrBA,MAAAA,KAAK,CAACC,cAAN;AAGC,UAAIP,IAAI,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBH,CAAjB,CAAX;AACA,WAAKS,IAAL,CAAUC,KAAV,CAAgBC,KAAhB,GAAuBV,IAAI,CAACS,KAA5B;AACA,WAAKE,SAAL;AAKA,WAAKP,QAAL,CAAc;AACdJ,QAAAA,IAAI,EAACA,IAAI,CAACS,KAAL,CAAWC;AADF,OAAd;AAMDE,MAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAYd,CAAZ;AACCa,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAtFkB;;AAIjB,SAAKZ,KAAL,GAAa;AAEXQ,MAAAA,KAAK,EAAE,EAFI;AAGXK,MAAAA,SAAS,EAAE,EAHA;AAIXC,MAAAA,QAAQ,EAAE,EAJC;AAKXC,MAAAA,GAAG,EAAE,CALM;AAMXC,MAAAA,WAAW,EAAE,KANF;AAOXf,MAAAA,KAAK,EAAE,CACL;AADK;AAPI,KAAb;AAaA,SAAKS,SAAL,GAAiB,KAAKA,SAAL,CAAeO,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,cAAL,GAAsB,KAAKA,cAAL,CAAoBD,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AAID;;AACDI,EAAAA,YAAY,CAAChB,KAAD,EAAQ;AAClB,SAAKF,QAAL,CAAc;AAACK,MAAAA,KAAK,EAAEH,KAAK,CAACiB,MAAN,CAAad;AAArB,KAAd;AACD;;AAEDe,EAAAA,QAAQ,CAAClB,KAAD,EAAQ;AACd,QAAImB,IAAI,GAAG;AACThB,MAAAA,KAAK,EAAEH,KAAK,CAACiB,MAAN,CAAad,KAAb,CAAmBC,KADjB;AAETI,MAAAA,SAAS,EAAER,KAAK,CAACiB,MAAN,CAAaT,SAAb,CAAuBJ,KAFzB;AAGTK,MAAAA,QAAQ,EAAET,KAAK,CAACiB,MAAN,CAAaR,QAAb,CAAsBL,KAHvB;AAITgB,MAAAA,SAAS,EAAEpB,KAAK,CAACiB,MAAN,CAAaG,SAAb,CAAuBhB,KAJzB;AAMTiB,MAAAA,MAAM,EAAE;AANC,KAAX;AAQA,WAAOF,IAAP;AACD;;AAEDJ,EAAAA,WAAW,CAACf,KAAD,EAAQ;AAGjB,UAAMsB,KAAK,GAAG,CAAC,GAAG,KAAK3B,KAAL,CAAWC,KAAf,CAAd;;AACA,QAAI0B,KAAK,CAACC,OAAN,CAAc,KAAKL,QAAL,CAAclB,KAAd,CAAd,MAAwC,CAAC,CAA7C,EAAgD;AAC9C,WAAKF,QAAL,CAAc;AAAEF,QAAAA,KAAK,EAAE0B;AAAT,OAAd;AAGD;;AAGD,SAAKR,UAAL;AACAd,IAAAA,KAAK,CAACC,cAAN;AACD;;AAkCDuB,EAAAA,MAAM,CAACxB,KAAD,EAAQ;AACZA,IAAAA,KAAK,CAACC,cAAN;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD;;AAKDF,EAAAA,SAAS,GAAG;AAEV,SAAKP,QAAL,CAAc;AAAEa,MAAAA,WAAW,EAAE;AAAf,KAAd;AAED;;AAEDE,EAAAA,cAAc,GAAG;AACf;AACA,SAAKY,QAAL,CAAcC,KAAd,CAAoBC,KAApB,GAA4B,MAA5B;AAED;;AAEDb,EAAAA,UAAU,GAAG;AACX,SAAKhB,QAAL,CAAc;AAAEa,MAAAA,WAAW,EAAE;AAAf,KAAd;AACD;;AAEDiB,EAAAA,MAAM,GAAG;AAEP,WAEE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE,oBAAE,MAAF;AAAS,MAAA,KAAK,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAM,MAAA,QAAQ,EAAE,KAAKb,WAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA+B,MAAA,GAAG,EAAC,OAAnC;AAA2C,MAAA,KAAK,EAAE,KAAKxB,KAAL,CAAWY,KAA7D;AAAoE,MAAA,IAAI,EAAC,OAAzE;AAAiF,MAAA,WAAW,EAAC,UAA7F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,GAAG,EAAC,WAAlC;AAA8C,MAAA,IAAI,EAAC,WAAnD;AAA+D,MAAA,WAAW,EAAC,aAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAOE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPF,EAQE;AAAU,MAAA,IAAI,EAAC,UAAf;AAA2B,MAAA,GAAG,EAAC,UAA/B;AAA0C,MAAA,IAAI,EAAC,IAA/C;AAAoD,MAAA,IAAI,EAAC,IAAzD;AAA8D,MAAA,EAAE,EAAC,WAAjE;AAA6E,MAAA,SAAS,EAAC,UAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAYE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,IAAI,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CAFF,CAJF,EA0BE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWC,KAAX,CAAiBiC,GAAjB,CAAqB,CAACC,MAAD,EAASrC,CAAT,KAAe;AACnC,aAAO;AAAK,QAAA,SAAS,EAAC,sCAAf;AAAsD,QAAA,GAAG,EAAEA,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACL,oBAAE,KAAF;AACE,QAAA,MAAM,EAAE,KAAKD,MAAL,CAAYoB,IAAZ,CAAiB,IAAjB,EAAuBnB,CAAvB,CADV;AAEE,QAAA,MAAM,EAAE,KAAKM,MAAL,CAAYa,IAAZ,CAAiB,IAAjB,EAAuBnB,CAAvB,CAFV;AAGE,QAAA,MAAM,EAAE,KAAK+B,MAAL,CAAYZ,IAAZ,CAAiB,IAAjB,CAHV;AAIE,QAAA,KAAK,EAAEkB,MAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADK,CAAP;AAaD,KAdA,CADH,CA1BF,EA8CE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKzB,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9CF,EAiDE,oBAAC,KAAD;AACE,MAAA,WAAW,EAAE,KADf;AAEE,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWgB,WAFrB;AAGE,MAAA,WAAW,EAAE,KAAKoB,qBAHpB;AAIE,MAAA,cAAc,EAAE,KAAKjB,UAJvB;AAKE,MAAA,SAAS,EAAC,OALZ;AAQE,MAAA,YAAY,EAAC,eARf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAaE;AAAQ,MAAA,OAAO,EAAE,KAAKA,UAAtB;AAAkC,MAAA,SAAS,EAAC,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAbF,EAcE;AAAI,MAAA,GAAG,EAAEW,QAAQ,IAAI,KAAKA,QAAL,GAAgBA,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF,EAkBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEE;AAAM,MAAA,QAAQ,EAAE,KAAKV,WAArB;AAAkC,MAAA,GAAG,EAAC,OAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,EAAC,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,IAAtB;AAA2B,MAAA,GAAG,EAAC,OAA/B;AAAuC,MAAA,IAAI,EAAC,OAA5C;AAAoD,MAAA,KAAK,EAAE,KAAKpB,KAAL,CAAWS,KAAtE;AAA6E,MAAA,QAAQ,EAAE,KAAKc,QAA5F;AAAuG,MAAA,WAAW,EAAC,UAAnH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAIE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,GAAG,EAAC,WAAlC;AAA8C,MAAA,IAAI,EAAC,WAAnD;AAA+D,MAAA,WAAW,EAAC,aAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAOE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAPF,EAQE;AAAU,MAAA,IAAI,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAC,UAA9B;AAAwC,MAAA,IAAI,EAAC,IAA7C;AAAkD,MAAA,IAAI,EAAC,IAAvD;AAA4D,MAAA,EAAE,EAAC,WAA/D;AAA2E,MAAA,SAAS,EAAC,UAArF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EAYE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AAAoC,MAAA,IAAI,EAAC,IAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CAFF,CAlBF,CAjDF,CAFF;AAqGD;;AAxNyB;;AA6N5B,eAAe7B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Header from './components/header';\n\nimport CRUDs from './components/corpo/crud.js';\nimport Footer from './components/footer/footer.js';\nimport './components/footer/index.css';\n\nimport './App.css';\nimport '../node_modules/flexboxgrid/css/flexboxgrid.min.css';\nimport Modal from 'react-modal';\n\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    \n    this.state = {\n      \n      title: \"\",\n      categoria: \"\",\n      textarea: \"\",\n      act :0,\n      modalIsOpen: false,\n      tasks: [\n        //<CRUDs />,\n\n\n      ]\n    }\n    this.openModal = this.openModal.bind(this);\n    this.afterOpenModal = this.afterOpenModal.bind(this);\n    this.closeModal = this.closeModal.bind(this);\n    this.createCruds = this.createCruds.bind(this);\n  \n\n\n  }\n  handleChange(event) {\n    this.setState({title: event.target.title});\n  }\n\n  newCruds(event) {\n    let crud = {\n      title: event.target.title.value,\n      categoria: event.target.categoria.value,\n      textarea: event.target.textarea.value,\n      descricao: event.target.descricao.value,\n\n      status: true\n    }\n    return crud;\n  }\n\n  createCruds(event) {\n   \n\n    const cruds = [...this.state.tasks];\n    if (cruds.unshift(this.newCruds(event)) !== -1) {\n      this.setState({ tasks: cruds })\n\n\n    }\n\n   \n    this.closeModal();\n    event.preventDefault();\n  }\n\n\n  delete = (i) => {\n\n    let task = this.state.tasks;\n    task.splice(i, 1);\n    this.setState({\n      task: task\n    })\n  }\n\n  editar = (i,event) => {\n   event.preventDefault();\n   \n\n    let task = this.state.tasks[i];\n    this.refs.title.value= task.title;\n    this.openModal(\n     \n      \n    );\n   \n    this.setState({\n    task:task.title.value\n  \n    })\n\n\n   console.log(task);\n   console.log(i);\n    console.log(\"Editando\");\n  }\n\n  salvar(event) {\n    event.preventDefault();\n    console.log('Salvando');\n  }\n\n\n\n\n  openModal() {\n    \n    this.setState({ modalIsOpen: true });\n\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    this.subtitle.style.color = '#f00';\n    \n  }\n\n  closeModal() {\n    this.setState({ modalIsOpen: false });\n  }\n\n  render() {\n   \n    return (\n     \n      <div className=\"App\">\n\n        < Header title=\"Gerencidor de Apps\" />\n\n        <div>\n          \n          <form onSubmit={this.createCruds} >\n            <label htmlFor=\"title\">Titulo</label>\n            <input type=\"text\" id=\"fname\"  ref=\"title\" value={this.props.title} name=\"title\" placeholder=\"Titulo..\" />\n\n            <label htmlFor=\"categoria\">Categoria</label>\n            <input type=\"text\" id=\"lname\" ref=\"categoria\" name=\"categoria\" placeholder=\"Categoria..\" />\n\n            <label htmlFor=\"descricao\">Descrição</label>\n            <textarea name=\"textarea\"  ref=\"textarea\" rows=\"10\" cols=\"94\" id=\"descricao\" className=\"textarea\" ></textarea>\n\n\n\n            <input type=\"submit\" value=\"Enviar\" name=\"bt\" />\n\n          </form>\n        </div>\n\n\n\n\n        <div className=\"row\"  >\n          {this.state.tasks.map((tarefa, i) => {\n            return <div className=\"col-xs-12 col-sm-8 col-md-6 col-lg-4\" key={i}>\n              < CRUDs\n                delete={this.delete.bind(this, i)}\n                editar={this.editar.bind(this, i)}\n                salvar={this.salvar.bind(this)}\n                valor={tarefa}\n\n              />\n\n\n              \n            </div>\n\n          })}\n\n        </div>\n\n\n        <Footer onClick={this.openModal} ></Footer>\n        \n        \n        <Modal\n          ariaHideApp={false}\n          isOpen={this.state.modalIsOpen}\n          onAfterOpen={this.afterOpenModtabelasal}\n          onRequestClose={this.closeModal}\n          className=\"Modal\"\n        \n\n          contentLabel=\"Example Modal\"\n\n\n        >\n         \n          <button onClick={this.closeModal} className=\"close\" > x </button>\n          <h2 ref={subtitle => this.subtitle = subtitle}>Tarefas</h2>\n\n\n\n          <div>\n          \n            <form onSubmit={this.createCruds} ref=\"modal\" >\n              <label htmlFor=\"ti\">Titulo</label>\n              <input type=\"text\" id=\"ti\" ref=\"title\" name=\"title\" value={this.state.value} onChange={this.newCruds}  placeholder=\"Titulo..\" />\n\n              <label htmlFor=\"categoria\">Categoria</label>\n              <input type=\"text\" id=\"lname\" ref=\"categoria\" name=\"categoria\" placeholder=\"Categoria..\" />\n\n              <label htmlFor=\"descricao\">Descrição</label>\n              <textarea name=\"textarea\" ref=\"textarea\"rows=\"10\" cols=\"94\" id=\"descricao\" className=\"textarea\" ></textarea>\n\n\n\n              <input type=\"submit\" value=\"Enviar\" name=\"bt\" />\n\n            </form>\n          </div>\n\n\n\n        </Modal>\n      \n      \n\n\n\n      </div>\n      \n    );\n        \n        \n  }\n}\n\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}